

.image-description {
  /* Make sure the text is visible */
  color: #000; /* Use a color that contrasts with the background */
  background-color: #f0f0f0; /* Add a light background to make it stand out */
  padding: 10px;
  margin-top: 5px;
  text-align: center;
  font-family: sans-serif;
  font-size: 14px;
}



nav {
   display: flex;
   justify-content: center;
   gap: 1.2rem;
   margin-top: 1rem;
}
.confetti-piece {
   pointer-events: none;
   box-shadow: 0 2px 8px rgba(255, 211, 211, 0.1);
}
.confetti {
   animation: pop 0.5s;
}
@keyframes pop {
   0% { transform: scale(1); }
   50% { transform: scale(1.3) rotate(35deg); }
   100% { transform: scale(1); }
}




body {
   font-family: Arial, sans-serif;
   background: #db741fe6;
   margin: 0;
   padding: 0;
}





header {
   background: #ff5454;
   color: #fff; /* White text */
   padding: 1rem;
   text-align: center; /* Centered text */
     margin-top: 0; 
     padding-top: 0;
    
}














main {
   padding: 2rem;
   text-align: center;
}




/* 1. Updated image CSS: */
img {
   width: 120px;
   height: 120px;
   object-fit: cover;
   margin-top: 1rem;
   border: 4px solid #000000;
   box-shadow: 0 4px 12px rgba(255, 222, 222, 0.1);
   display: block;
   margin-left: 0px;
   margin-right: auto;


   position: relative;
   z-index: 0;
  }





  /* Container to hold both the icon and the buttons, putting them side-by-side */
.header-container {
    display: flex; 
    align-items: center; /* Aligns items vertically in the center */
    padding: 20px 0; 
    justify-content: center; /* Centers the whole block */
}

/* Icon Styles (Simplified) */
#icon_img {
   border-radius: 10%;
   width: 70px;
   height: 70px;
   object-fit: cover;
   margin-top: 1rem; /* Consider removing this if .header-container padding is enough */
   border: 4px solid #000000;
   box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
   
   /* Space between the icon and the buttons */
   margin-right: 20px; 
}

/* Container for your buttons (to group them) */
.buttons-container {
    display: flex;
    /* Vertically center the buttons themselves */
    align-items: center; 
}

/* Your existing button style (No Change needed here from your previous request) */
.button {
   background: white;
   border: none;
   border-radius: 20px;
   color: rgb(0, 0, 0);
   margin: 10px;
   padding: 10px 15px;
   cursor: pointer;
   font-size: 1rem;
   display: inline-flex; 
   align-items: center;
   gap: 10px;
   transition: background-color 0.3s;
   box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
   font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
   font-weight: bold;
}





#round_img {
   border-radius: 10%;
}














/*these are the footer text at the bottom of the page*/
#footerText {
   background: #ff4343;
   color: #fff;
   text-align: left;
   padding: 0.2rem;
   position: fixed;
   width: 100%;
   bottom: -15px;
   left: 0;
}



/* Add this to the very top of your CSS file */
html, body {
    margin: 0; 
    padding: 0;
    width: 100%;
}


#header_top {
   /* ... other styles for color, height, etc. ... */
   
   /* Ensure no internal or external spacing on the purple bar */
   padding: 0; 
   margin: 0; 
   width: 100%;
   height: 30px; /* Adjust height as needed */
   background: rgba(0, 33, 117, 0.75);
   display: block; 

   /* ... other styles ... */
};









/* New style for the introductory text */
#intro_txt {
   font-size: 1.5rem;
   color: #333;
   margin-top: 1rem;
   font-style: italic;
   font-family: Arial, sans-serif;
}












/* 1. The main viewport/window for the carousel */
.carousel-container {
   width: 100%; /* Or set a fixed width */
   overflow-x: auto; /* This enables horizontal scrolling */
   white-space: nowrap; /* Forces all children (image-wrapper) onto one line */
   -webkit-overflow-scrolling: touch; /* Improves scrolling on iOS devices */
   padding: 10px 0; /* Add some vertical space if needed */
}




/* 2. The inner container that holds the boxes */
.image-wrapper {
   display: inline-block; /* Keeps the wrapper inline for horizontal scrolling */
}




/* 3. The individual boxed image styles */
.image-box {
   display: inline-block; /* Forces the boxes to line up horizontally */
   width: 200px; /* Set the width of each box */
   height: 200px; /* Set the height of each box */
   margin-right: 20px; /* Space between the boxes */
   border: 10px solid #ffafaf; /* Simple border for the "boxed" look */
   box-sizing: border-box; /* Includes padding and border in the element's total width/height */
   overflow: hidden; /* Important to keep the image contained */
}




/* 4. Ensure the image fills the box nicely */
.image-box img {
   width: 100%;
   height: 100%;
   object-fit: cover; /* Ensures the image covers the box without distortion */
   display: block; /* Removes any default space below the image */
}








.carousel-container {
   /* Existing properties... */
   scroll-snap-type: x mandatory; /* Enables snapping on the x-axis */
}




.image-box {
   /* Existing properties... */
   scroll-snap-align: start; /* Tells the box to snap to the start of the viewport */
}












/* --- 1. Base Navigation Styling (No Change) --- */
.main-menu {
   list-style: none;
   padding: 0;
   margin: 0;
   display: flex;
}




.main-menu > li {
   position: relative;
}




/* Style the main buttons/links (No Change) */
.button {
   background: white;
   border: none;
   border-radius: 20px;
   color: rgb(0, 0, 0);
   margin: 10px;
   padding: 10px 15px;
   cursor: pointer;
   font-size: 1rem;
   display: inline-flex;
   align-items: center;
   gap: 10px;
   transition: background-color 0.3s;
   box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
   font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
   font-weight: bold;
   box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
   font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
   font-weight: bold;




}




/* Define the animation */
@keyframes sin-rotation {
 0% {
   /* Start at -10 degrees */
   transform: rotate(-5deg);
 }
 50% {
   /* Halfway through, move to +10 degrees */
   transform: rotate(5deg);
 }
 100% {
   /* Return to -10 degrees to complete the cycle */
   transform: rotate(-5deg);
 }
}


/* Apply the animation to your button */
button:hover {
 animation-name: sin-rotation;
 animation-duration: 0.2s;
 animation-timing-function: ease-in-out;
 animation-iteration-count: 2;
}




.button:hover {
   background-color: #555;
}




/* --- 2. Sub-Menu Styling (Updated for Button Look) --- */




.submenu {
   list-style: none;
   padding: 0;
   margin: 0;
   position: absolute;
   top: 100%;
   left: 0;
   z-index: 10;
   min-width: 160px; /* Slightly wider */
   /* Removed border to make it look cleaner */




   /* Hidden by default */
   display: none;
   box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
}




.sub-button {
   text-decoration: none;
   color: white;
   padding: 10px 15px;
   display: block;
   font-size: 0.95rem;
   background-color: #a7a7a7;
   border-bottom: 1px solid #555;
   transition: background-color 0.2s, color 0.2s;
   border-radius: 10px;
}




.submenu li:last-child .sub-button {
   border-bottom: none;
}




.sub-button:hover {
   background-color: #ff5058;
   color: white;
}




.has-submenu:hover > .submenu {
   display: block;
}



/* images */


 
        .main-container {
            box-sizing: border-box;
            text-align: center;
            
        }
  
        .image-gallery {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            padding: 20px;
            background-color: #fff;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            
        }
        .portfolio-image {
            width: 100%;
            height: auto;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            cursor: pointer; /* Add a pointer cursor to show it's clickable */

        }
        .portfolio-image:hover {
            transform: scale(1.03);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
            
            
        }

        /* --- Lightbox Styles (for the full-screen image view) --- */
        .lightbox-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.789);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            visibility: hidden;
            opacity: 0;
            transition: visibility 0.3s, opacity 0.3s ease;
        }
        .lightbox-overlay.visible {
            visibility: visible;
            opacity: 1;
        }
        .lightbox-content {
            background: #fff;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 4px 25px rgba(0, 0, 0, 0.5);
            max-width: 95%; 
            max-height: 95%;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .lightbox-content img {
            max-width: 100%;
            max-height: 100%;
            border-radius: 8px;
            
        }





          .search-container {
            display: flex;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        #search-input {
            border: none;
            padding: 10px 10px;
            font-size: 10px;
            outline: none;
            width: 300px;
        }

        #search-button {
            border: none;
            background-color: #007bff;
            color: white;
            padding: 10px 20px;
            cursor: pointer;
            font-size: 10px;
            transition: background-color 0.3s;
        }

        #search-button:hover {
            background-color: #0056b3;

        }

/* images */

        /* ... existing .main-container and .image-gallery styles remain unchanged ... */

        .image-gallery {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            padding: 20px;
            background-color: #fff;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            
        }
        
        /* NEW: Add a wrapper class if your images don't have one, 
           or apply aspect-ratio to a parent element if possible. 
           Since your images are inside a grid, the grid item itself 
           serves as a container. We'll assume the image is the direct 
           child of a grid item (like a <div>).
        */
        .image-gallery > div { /* Target the grid item wrapper */
            /* OPTIONAL: Set a fixed proportion for the image display area */
            aspect-ratio: 4 / 3; /* Example: maintains a 4:3 proportion */
            overflow: hidden; /* Hide any overflow */
            border-radius: 8px; /* Match the image's border-radius */
            /* This div now controls the space and proportion */
        }
        
        .portfolio-image {
            /* These properties make the image fill the container and scale down */
            width: 100%;
            height: 100%; /* Change from 'auto' to 100% to fill the aspect-ratio container */
            
            /* CRUCIAL: Fixes the image proportion and ensures it covers the 4:3 space */
            object-fit: cover; 
            
            /* The rest of the original styles */
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            cursor: pointer; /* Add a pointer cursor to show it's clickable */

        }
        /* ... rest of the original CSS remains unchanged ... */

        /* ADD THIS to the .main-container to cap the gallery size */
.main-container {
    box-sizing: border-box;
    text-align: center;
    /* NEW: Set a maximum width for the whole content area */
    max-width: 1200px; /* Adjust this value (e.g., 1000px, 1400px) as needed */
    margin-left: auto;   /* Center the container */
    margin-right: auto;  /* Center the container */
}

/* ... rest of the CSS remains the same ... */

/* The grid will then scale from this max-width down to the smallest size */
.image-gallery {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    /* ... existing styles ... */
}
        



/* --- CONTAINER STYLES --- */
.auth-buttons {
  display: flex; /* Aligns buttons next to each other */
  gap: 10px; /* Adds space between the buttons */
}












 
        
        .signup-container {
            background-color: #ffffff;
            padding: 2.5rem;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            width: 90%;
            max-width: 400px;
            text-align: center;
            border: 1px solid #e0e0e0;
        }
  
        
        .input-group {
            margin-bottom: 1.5rem;
            text-align: left;
        }
        .input-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: #555;
            font-size: 0.9rem;
        }
        .input-group input {
            width: 100%;
            padding: 0.8rem;
            border: 1px solid #ccc;
            border-radius: 8px;
            box-sizing: border-box;
            transition: border-color 0.3s, box-shadow 0.3s;
        }
        .input-group input:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25);
            outline: none;
        }
  
        .link-text {
            margin-top: 1.5rem;
            font-size: 0.9rem;
        }
        .link-text a {
            color: #007bff;
            text-decoration: none;
            font-weight: 600;
        }
        .link-text a:hover {
            text-decoration: underline;
        }



        















/* for the bottom portion of html */

   /* --- Main Content Layout --- */
        .main-content-container {
            display: flex; 
            width: 100%; 
            /* FIX 1: Set a more reasonable max-width */
            max-width: 1600px; 
            /* FIX 2: Reduce top/bottom margin for small screens */
            margin: 50px auto; 
            gap: 100px; 
            position: relative; 
            box-sizing: border-box; /* Good practice for all elements */
            padding: 20px; /* Add some padding so content doesn't hit the edges */
        }
        
        .main-content-container::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            /* FIX 3: Remove fixed width/height and use 100% to fill the content */
            width: 100%; 
            height: 100%; 
            background: rgba(255, 255, 255, 0.5); 
            border: 10px solid black;
            border-radius: 15px;
            z-index: -1;
        }

        /* ========================================= */
        /* --- Left Sidebar Styling --- */
        /* ========================================= */

        .sidebar {
            /* FIX 4: Use a percentage or max-width for the sidebar instead of fixed pixels */
            width: 25%; /* Sidebar is now 25% of the main container width */
            min-width: 250px; /* Optional: Set a minimum width to prevent crushing */
            padding: 20px;
            border: 5px solid black;
            border-radius: 10px;
            background-color: transparent;
            display: flex;
            flex-direction: column;
            align-items: center;
            box-sizing: border-box;
            gap: 15px;
        }
        
        /* The sidebar-handle's positioning based on pixels might still be tricky, 
           but we leave it as is since it's hidden on mobile anyway. */
        .sidebar-handle {
            position: absolute;
            left: 10px;
            top: 10px;
            height: calc(100% - 30px);
            width: 10px;
            background-color: black;
            border: 5px solid black;
            border-radius: 5px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            gap: 4px;
            box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);
            transform: translateX(-50%);
        }

        .handle-line {
            width: 60%;
            height: 3px;
            background-color: white;
            border-radius: 2px;
        }

        .sidebar-item {
            width: 100%;
            /* FIX 5: Remove fixed height on .sidebar-item if content might vary */
            /* If it's meant to be a fixed size, consider a viewport unit like 10vh */
            height: 70px; 
            background-color: #6a6a6a; 
            border: 5px solid black;
            border-radius: 10px;
            box-sizing: border-box;
        }
        /*
        .sidebar-item {
            
        }
        */

        /* ========================================= */
        /* --- Right Content Grid Styling --- */
        /* ========================================= */
.grid-section {
    position: relative; /* This makes the arrow position relative to each image section */
    /* Other .grid-section styles... */
}

        .grid-section {
            display: flex;
            /* FIX 6: Use flex-wrap to prevent overflow if items can't fit */
            flex-wrap: wrap; 
            gap: 10px;
        }
        
        .grid-item {
            background-color: transparent;
            border: 10px solid trasnparent;
            border-radius: 10px;
            
        }

        .grid-item img {
  width: 100%;
  height: 100%;
  object-fit: containc;
}


/* General Grid Item Styling */
/* This ensures all grid items have a common starting point */
.grid-item {
    display: flex; /* Make sure each grid item can contain content correctly */
}
/* --- General Grid and Image Styling --- */

/* This makes sure images fill their boxes without stretching */
.grid-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

/* All grid sections are now flex containers */
.grid-section {
    flex-grow: 1;
    min-height: 200px; /* Use min-height for flexible sizing */
    display: flex;
    flex-direction: row; /* Arrange the main items (large-item and image columns) in a row */
    gap: 5px;
}

/* --- Vertical Stacking of Small Images --- */

/* This container holds and stacks the small images vertically */
.vertical-stack-container {
    display: flex;
    flex-direction: column;
    gap: 5px; /* Space between the images in a column */
    flex-grow: 1;
}

/* This container holds both columns of small images side-by-side */
.small-images-container {
    display: flex;
    flex-direction: row;
    gap: 5px; /* Space between the two columns of images */
    flex-grow: 1;
}

/* --- Sizing for the Large and Small Items --- */

.grid-item {
    flex-grow: 1;
}

.large-item {
    flex: 2 1 300px; /* Make the large image twice as wide as the small ones */
    height: auto;
}

/* Specific sizing adjustments for each section */

/* Top Section */
.top-section .small-images-container {
    flex: 1 1 100px;
}

img, .img {
     border-radius: 20px;

}



/* --- Base Styling and Universal Transitions --- */

/* The magic line that makes every effect smooth and elegant */
.grid-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94), 
                filter 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94), 
                box-shadow 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94),
                border-radius 0.6s ease;
}

/* --- Keyframe Animations for Variety --- */

@keyframes pulse-glow {
    0%, 100% { box-shadow: 0 0 10px rgba(255, 255, 255, 0.5); }
    50% { box-shadow: 0 0 25px rgba(255, 255, 255, 0.8), 0 0 40px rgba(255, 255, 255, 0.6); }
}

@keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-5px); }
}

@keyframes spin-grow {
    0% { transform: scale(1) rotate(0deg); }
    100% { transform: scale(1.1) rotate(360deg); }
}

/* --- Combined Hover Effects using nth-child() --- */

/* Style 1: A subtle lift, brightness, and soft shadow */
.grid-item:nth-child(5n+1) img:hover {
    transform: translateY(-5px) scale(1.03);
    filter: brightness(1.2) contrast(1.1);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.4);
}

/* Style 2: A gentle scale, rotation, and elegant border radius */
.grid-item:nth-child(5n+2) img:hover {
    transform: scale(1.05) rotate(2deg);
    border-radius: 10px;
    filter: saturate(1.2);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

/* Style 3: An intense, saturated pop with a tilt */
.grid-item:nth-child(5n+3) img:hover {
    transform: perspective(1000px) scale(1.08) rotateX(10deg);
    filter: brightness(1.3) saturate(1.5);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.5);
}

/* Style 4: A glowing border effect with a quick pulse */
.grid-item:nth-child(5n+4) img:hover {
    transform: scale(1.05);
    filter: brightness(1.1);
    box-shadow: 0 0 15px rgba(255, 255, 255, 0.8);
    animation: pulse-glow 2s infinite ease-in-out;
}

/* Style 5: A deep zoom with a gentle floating motion */
.grid-item:nth-child(5n+5) img:hover {
    transform: scale(1.05);
    filter: saturate(1.3) contrast(1.1);
    box-shadow: 0 5px 25px rgba(0, 0, 0, 0.6);
    animation: float 2s infinite ease-in-out;
}




















img {
  /* Add this line for a smooth transition effect */
  transition: filter 0.3s ease;
}

img:hover {
  /* This increases the image brightness by 20% */
  filter: brightness(1.2); 
}

.middle-section .small-images-container {
    flex: 1 1 100px;
}

/* Bottom Section */
.bottom-section .small-images-container {
    flex: 1 1 100px;
}
        /* --- Right Arrow Styling --- */
        /* The arrow positioning is based on fixed pixels, which breaks responsiveness. 
           On a responsive layout, the arrows should be inside the container or hidden on small screens. */
        /*
        2. Modify the arrow styling
        */
        .arrow {
            position: absolute;
            top: 50%; /* This will vertically center the arrow */
            right: 10px; /* Adjust this value to set the distance from the right edge */
            transform: translateY(-50%); /* This perfectly centers the arrow vertically */
            font-size: 10rem;
            color: black;
            font-weight: bold;
            z-index: 10; /* Ensure the arrow is on top of other content */
            display: none; /* Hide by default, show only on larger screens */

        }

        /*
        3. Show the arrows on screens where they make sense
        */
        @media (min-width: 801px) {
            .arrow {
                display: block; /* Show the arrows on desktop */
            }
        }


        /* FIX 11: The arrow positioning is fixed. Use percentages or vh/em/calc() 
           but the safest bet is to rely on Flexbox's layout */
        .arrow-1 { top: calc(30% - 10px); }
        .arrow-2 { top: calc(60% - 10px); }
        .arrow-3 { top: calc(90% - 10px); }


        /* Add to your existing CSS file */
        @keyframes glow-pulse {
        0% { box-shadow: 0 0 5px rgba(0, 0, 0, 0.2); }
        50% { box-shadow: 0 0 20px rgba(0, 0, 0, 0.5), 0 0 30px rgba(0, 0, 0, 0.3); }
        100% { box-shadow: 0 0 5px rgba(0, 0, 0, 0.2); }
        }

        .arrow.animate {
        animation: glow-pulse 2s infinite ease-in-out;
        color: #fff; /* Changes the arrow color for a glow effect */
        text-shadow: 0 0 10px rgba(255, 255, 255, 0.8); /* A subtle white text glow */
        }

        /* ========================================= */
        /* --- Mobile Breakpoint (Added for stacking) --- */
        /* ========================================= */
        @media (max-width: 800px) {
    
            /* 1. Stack the sidebar and content vertically */
            .main-content-container {
                flex-direction: column;
                gap: 50px;
            }
            
            /* 2. Sidebar should take full width when stacked */
            .sidebar {
                width: 150%;
            }
            
            /* 3. Hide non-essential positioning elements that break when stacked */
            .sidebar-handle,
            .arrow {
                display: none;
            }
            
            /* 4. Allow sections to wrap content */
            .grid-section {
                flex-wrap: wrap; 
            }
            
            /* 5. Ensure grid items take up at least half the width so they don't get too small */
            .grid-section .grid-item {
                /* This ensures items are either side-by-side (if room) or stacked */
                flex: 1 1 calc(50% - 15px); 
            }
        }

        

        /* FIX 11: The arrow positioning is fixed. Use percentages or vh/em/calc() 
           but the safest bet is to rely on Flexbox's layout */
            .arrow-1 { top: calc(10% + 10px); }
        .arrow-2 { top: calc(40% + 10px); }
        .arrow-3 { top: calc(70% + 10px); }
.arrow {
    position: absolute;
    right: -170px;
    margin: 10px;
    font-size: 10rem;
    color: black;
    font-weight: bold;
    
    transform: translateY(-50%);
    z-index: 10;
    transition: transform 0.5s ease-out; /* Add a smooth transition for the hover effect */
    animation: pulse 2s infinite ease-in-out; /* Apply a continuous animation */
}

/* Define the keyframe animation for a subtle pulse */
@keyframes pulse {
    0%, 100% { transform: translateY(-50%) scale(2.5); }
    50% { transform: translateY(-50%) scale(3); }
}

/* The hover effect for an interactive touch */
.arrow:hover {
    transform: translateY(-50%) scale(1.2);
    color: #fff; /* Change color on hover */
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.8); /* Add a glow on hover */
}






/* Good: Content will always take up 90% of the screen */
.main-content {
  max-width: 1200px; /* Optional: Sets a max size for huge screens */
  width: 90%;
  margin: 0 auto; /* Centers the block */
}

.container {
  display: flex;
  flex-wrap: wrap; /* Allows items to wrap to the next line when screen size shrinks */
  justify-content: space-around;
}

.item {
  flex: 1 1 300px; /* Grow, Shrink, and basis of 300px. Items adjust size fluidly. */
}

.grid-container {
  display: grid;
  /* Columns will fit as many 300px items as possible, then shrink/grow fluidly */
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 20px;
}

/* DEFAULT STYLES FOR DESKTOP (or the largest size first) */
.column {
  width: 33.33%; /* Three columns on desktop */
  float: left;
}

/* MEDIA QUERY: STYLES FOR SCREENS SMALLER THAN 600px (e.g., phones) */
@media screen and (max-width: 600px) {
  .column {
    width: 100%; /* Columns now stack on top of each other on phones */
  }
}







 .container {
            background-color:transparent;
            padding: 2rem;
            margin-left: 2rem;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 400px;
            text-align: center;
        }

        .container h1 {
            font-size: 2rem;
            color: #2c3e50;
            margin-bottom: 0.5rem;
        }

        .container p {
            color: #7f8c8d;
            margin-bottom: 1.5rem;
        }

        .button-group {
            margin-bottom: 1.5rem;
        }

        .button-group button {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1rem;
            transition: background-color 0.3s, transform 0.2s;
            margin: 0 0.25rem;
        }

        .button-group button:hover {
            background-color: #2980b9;
            transform: translateY(-2px);
        }

        .input-group {
            margin-bottom: 1rem;
            text-align: left;
        }

        .input-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: bold;
            color: #555;
        }

        .input-group input {
            width: 100%;
            padding: 0.75rem;
            box-sizing: border-box;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-size: 1rem;
        }

        .form-button {
            width: 100%;
            background-color: #2ecc71;
            color: white;
            border: none;
            padding: 1rem;
            border-radius: 8px;
            font-size: 1.1rem;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.2s;
        }

        .form-button:hover {
            background-color: #27ae60;
            transform: translateY(-2px);
        }

        .message-box {
            background-color: #e8f9ed;
            color: #27ae60;
            padding: 1rem;
            border-radius: 8px;
            margin-top: 1.5rem;
            opacity: 0;
            transition: opacity 0.4s ease-in-out;
        }
        
        .message-box.show {
            opacity: 1;
        }
